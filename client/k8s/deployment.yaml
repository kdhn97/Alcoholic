apiVersion: v1
kind: Namespace
metadata:
  name: ns-client
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
  namespace: ns-client
  labels:
    app: client
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
      - name: client
        image: tkdqja9573/ssafy-tailored-client
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet:
            path: /
            port: 3000
        resources:
          requests:
            cpu: "400m"
          limits:
            cpu: "800m"
---
apiVersion: v1
kind: Service
metadata:
  name: client
  namespace: ns-client
  labels:
    app: client
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: client
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: redirect
  namespace: ns-client
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: client-tls
  namespace: ns-client
spec:
  secretName: client-tls
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
  commonName: ssafy.picel.net
  dnsNames:
  - ssafy.picel.net
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: client-ingress
  namespace: ns-client
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
    acme.cert-manager.io/http01-ingress-class: "traefik"
    traefik.ingress.kubernetes.io/router.middlewares: ns-client-redirect@kubernetescrd
spec:
  ingressClassName: traefik
  rules:
  - host: ssafy.picel.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: client
            port:
              number: 80
  tls:
    - hosts:
      - ssafy.picel.net
      secretName: client-tls